{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Riviane\\\\Desktop\\\\projectpt\\\\src\\\\pages\\\\create-post\\\\create-form.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CreateForm = () => {\n  _s();\n  var _errors$title, _errors$description;\n  const schema = yup.object().shape({\n    title: yup.string().required(\"You must add a title.\"),\n    description: yup.string().required(\"You must add a text.\")\n  });\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n  const onCreatePost = data => {};\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onCreatePost),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Title...\",\n      ...register(\"title\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", (_errors$title = errors.title) === null || _errors$title === void 0 ? void 0 : _errors$title.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Description...\",\n      ...register(\"description\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", (_errors$description = errors.description) === null || _errors$description === void 0 ? void 0 : _errors$description.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateForm, \"3BvqeXxhdbtuFje96i6EWEvZ8kQ=\", false, function () {\n  return [useForm];\n});\n_c = CreateForm;\nvar _c;\n$RefreshReg$(_c, \"CreateForm\");","map":{"version":3,"names":["React","useForm","yup","yupResolver","jsxDEV","_jsxDEV","CreateForm","_s","_errors$title","_errors$description","schema","object","shape","title","string","required","description","register","handleSubmit","formState","errors","resolver","onCreatePost","data","onSubmit","children","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","message","type","_c","$RefreshReg$"],"sources":["C:/Users/Riviane/Desktop/projectpt/src/pages/create-post/create-form.tsx"],"sourcesContent":["import React from 'react'\r\nimport { useForm } from 'react-hook-form'\r\nimport * as yup from 'yup'\r\nimport { yupResolver } from '@hookform/resolvers/yup'\r\n\r\ninterface CreateFormData {\r\ntitle: string;\r\ndescription: string; \r\n}\r\n\r\nexport const CreateForm = () => {\r\n  const schema = yup.object().shape({\r\n    title: yup.string().required(\"You must add a title.\"),\r\n    description: yup.string().required(\"You must add a text.\"),\r\n  })\r\n\r\n  const { register, handleSubmit, formState: { errors }, } = useForm <CreateFormData>({\r\n    resolver: yupResolver(schema)\r\n  })\r\n\r\nconst onCreatePost = (data: CreateFormData) => {\r\n\r\n};\r\n\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onCreatePost)}>\r\n      <input placeholder='Title...' {... register(\"title\")} />\r\n      <p> {errors.title?.message}</p>\r\n      <textarea placeholder='Description...'  {... register(\"description\")}/>\r\n      <p> {errors.description?.message}</p>\r\n     <input type=\"submit\" />\r\n    </form>\r\n  )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,iBAAiB;AACzC,OAAO,KAAKC,GAAG,MAAM,KAAK;AAC1B,SAASC,WAAW,QAAQ,yBAAyB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAOrD,OAAO,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,aAAA,EAAAC,mBAAA;EAC9B,MAAMC,MAAM,GAAGR,GAAG,CAACS,MAAM,EAAE,CAACC,KAAK,CAAC;IAChCC,KAAK,EAAEX,GAAG,CAACY,MAAM,EAAE,CAACC,QAAQ,CAAC,uBAAuB,CAAC;IACrDC,WAAW,EAAEd,GAAG,CAACY,MAAM,EAAE,CAACC,QAAQ,CAAC,sBAAsB;EAC3D,CAAC,CAAC;EAEF,MAAM;IAAEE,QAAQ;IAAEC,YAAY;IAAEC,SAAS,EAAE;MAAEC;IAAO;EAAG,CAAC,GAAGnB,OAAO,CAAkB;IAClFoB,QAAQ,EAAElB,WAAW,CAACO,MAAM;EAC9B,CAAC,CAAC;EAEJ,MAAMY,YAAY,GAAIC,IAAoB,IAAK,CAE/C,CAAC;EAGC,oBACElB,OAAA;IAAMmB,QAAQ,EAAEN,YAAY,CAACI,YAAY,CAAE;IAAAG,QAAA,gBACzCpB,OAAA;MAAOqB,WAAW,EAAC,UAAU;MAAA,GAAMT,QAAQ,CAAC,OAAO;IAAC;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI,eACxDzB,OAAA;MAAAoB,QAAA,GAAG,GAAC,GAAAjB,aAAA,GAACY,MAAM,CAACP,KAAK,cAAAL,aAAA,uBAAZA,aAAA,CAAcuB,OAAO;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eAC/BzB,OAAA;MAAUqB,WAAW,EAAC,gBAAgB;MAAA,GAAOT,QAAQ,CAAC,aAAa;IAAC;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACvEzB,OAAA;MAAAoB,QAAA,GAAG,GAAC,GAAAhB,mBAAA,GAACW,MAAM,CAACJ,WAAW,cAAAP,mBAAA,uBAAlBA,mBAAA,CAAoBsB,OAAO;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACtCzB,OAAA;MAAO2B,IAAI,EAAC;IAAQ;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACjB;AAEX,CAAC;AAAAvB,EAAA,CAxBYD,UAAU;EAAA,QAMsCL,OAAO;AAAA;AAAAgC,EAAA,GANvD3B,UAAU;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}