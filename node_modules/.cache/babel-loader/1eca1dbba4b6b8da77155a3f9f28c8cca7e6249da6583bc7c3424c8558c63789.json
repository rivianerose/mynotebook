{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Riviane\\\\Desktop\\\\projectpt\\\\src\\\\pages\\\\create-post\\\\create-form.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { addDoc, collection } from 'firebase/firestore';\nimport { auth, db } from '../../config/firebase';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CreateForm = () => {\n  _s();\n  var _errors$title, _errors$description;\n  const [user] = useAuthState(auth);\n  const navigate = use;\n  const schema = yup.object().shape({\n    title: yup.string().required(\"You must add a title.\"),\n    description: yup.string().required(\"You must add a description.\")\n  });\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n  const postsRef = collection(db, \"posts\");\n  const onCreatePost = async data => {\n    await addDoc(postsRef, {\n      ...data,\n      username: user === null || user === void 0 ? void 0 : user.displayName,\n      userId: user === null || user === void 0 ? void 0 : user.uid\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onCreatePost),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Title...\",\n      ...register(\"title\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: [\" \", (_errors$title = errors.title) === null || _errors$title === void 0 ? void 0 : _errors$title.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Description...\",\n      ...register(\"description\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: [\" \", (_errors$description = errors.description) === null || _errors$description === void 0 ? void 0 : _errors$description.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      className: \"submitForm\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateForm, \"Z8HArzfg622HuFrSWeuOXIkC3Us=\", false, function () {\n  return [useAuthState, useForm];\n});\n_c = CreateForm;\nvar _c;\n$RefreshReg$(_c, \"CreateForm\");","map":{"version":3,"names":["React","useForm","yup","yupResolver","addDoc","collection","auth","db","useAuthState","jsxDEV","_jsxDEV","CreateForm","_s","_errors$title","_errors$description","user","navigate","use","schema","object","shape","title","string","required","description","register","handleSubmit","formState","errors","resolver","postsRef","onCreatePost","data","username","displayName","userId","uid","onSubmit","children","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","style","color","message","type","className","_c","$RefreshReg$"],"sources":["C:/Users/Riviane/Desktop/projectpt/src/pages/create-post/create-form.tsx"],"sourcesContent":["import React from 'react'\r\nimport { useForm } from 'react-hook-form'\r\nimport * as yup from 'yup'\r\nimport { yupResolver } from '@hookform/resolvers/yup'\r\nimport { addDoc, collection } from 'firebase/firestore'\r\nimport {auth, db} from '../../config/firebase'\r\nimport { useAuthState } from 'react-firebase-hooks/auth'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\ninterface CreateFormData {\r\ntitle: string;\r\ndescription: string; \r\n}\r\n\r\nexport const CreateForm = () => {\r\n  const [user] = useAuthState(auth); \r\n\r\n  const navigate = use\r\n\r\n  const schema = yup.object().shape({\r\n    title: yup.string().required(\"You must add a title.\"),\r\n    description: yup.string().required(\"You must add a description.\"),\r\n  })\r\n\r\n  const { register, handleSubmit, formState: { errors }, } = useForm <CreateFormData>({\r\n    resolver: yupResolver(schema)\r\n  })\r\n\r\nconst postsRef = collection(db, \"posts\");\r\n\r\n\r\nconst onCreatePost = async (data: CreateFormData) => { await\r\naddDoc(postsRef, {\r\n  ...data,\r\n  username: user?.displayName,\r\n  userId: user?.uid, \r\n})\r\n};\r\n\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onCreatePost)}>\r\n      <input placeholder='Title...' {... register(\"title\")} />\r\n      <p style={{color: 'red'}}> {errors.title?.message}</p>\r\n      <textarea placeholder='Description...'  {... register(\"description\")}/>\r\n      <p style={{color: 'red'}}> {errors.description?.message}</p>\r\n     <input type=\"submit\" className='submitForm'/>\r\n    </form>\r\n  )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}